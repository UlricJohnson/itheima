package com.itheima.test3;

/**
 * (1)编写一个泛型方法，实现指定位置数组元素的交换
 * 
 * (2)编写一个泛型方法，接收一个任意数组，并反转数组中的所有元素
 * 
 * @author Ulric
 *
 */

public class Test3 {

	public static void main(String[] args) {
		Person[] persons = new Person[6];

		persons[0] = new Person("张三", 40);
		persons[1] = new Person("李四", 44);
		persons[2] = new Person("王五", 37);
		persons[3] = new Person("马六", 25);
		persons[4] = new Person("神七", 38);
		persons[5] = new Person("衫八", 29);

		System.out.println("原数组：");
		printArr(persons);
		System.out.println("========================");

		int index1 = 2, index2 = 4;
		myExchange(persons, index1, index2);
		System.out.println("交换索引为" + index1 + "和" + index2 + "的元素后：");
		printArr(persons);
		System.out.println("========================");

		System.out.println("反转数组后：");
		reverse(persons);
		printArr(persons);

	}

	// 输出数组元素
	public static <T> void printArr(T[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}
	}

	// 交换数组指定位置的元素
	public static <T> void myExchange(T[] arr, int index1, int index2) {
		T temp = arr[index1];
		arr[index1] = arr[index2];
		arr[index2] = temp;
	}

	// 反转数组
	public static <T> void reverse(T[] arr) {
		for (int i = 0, j = arr.length - 1; i < j; i++, j--) {
			T temp = arr[i];
			arr[i] = arr[j];
			arr[j] = temp;
		}
	}

}
